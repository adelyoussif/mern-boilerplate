{"version":3,"sources":["assets/spinner.svg","registerServiceWorker.js","components/pages/Landing.js","components/layout/Header.js","components/layout/Footer.js","components/common/TextInputField.js","components/common/ButtonField.js","store/actions/auth.js","store/actions/types.js","store/actions/contact.js","utils.js","components/components/LoginForm.js","components/components/SignupForm.js","components/pages/Logout.js","components/pages/Secret.js","components/pages/NotFound.js","components/pages/EditProfile.js","components/pages/Settings.js","components/pages/Profile.js","components/common/requireAuth.js","components/components/PasswordResetForm.js","components/components/NewPasswordForm.js","components/components/EmailConfirmationForm.js","components/common/Spinner.js","components/pages/EmailConfirmationToken.js","components/common/TextAreaField.js","components/components/ContactForm.js","components/components/NewsletterForm.js","components/AppRouter.js","store/reducers/auth.js","store/reducers/contact.js","store/configureStore.js","index.js"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","pages_Landing","react_default","a","createElement","className","Helmet","name","content","react","Header_Header","showSettings","settingsClickHandler","_this","document","removeEventListener","handleOutsideClick","addEventListener","setState","e","node","contains","target","navHandler","props","authenticated","user","_this$props$user","username","fullName","Link","to","concat","ref","onClick","Fragment","this","layout_Header","Object","es","auth","layout_Footer","TextInputField_TextInputField","_ref","type","value","placeholder","onChange","label","onBlur","disabled","autoFocus","autoComplete","id","minLength","maxLength","required","defaultProps","common_TextInputField","ButtonField_ButtonField","common_ButtonField","API_URL","auth_signup","callback","_asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","axios_default","post","sent","token","data","localStorage","setObject","t0","errors","stop","_x","apply","arguments","auth_login","_ref2","_callee2","_context2","setItem","_x2","auth_logout","removeItem","auth_resetPassword","login","_ref3","_callee3","_context3","success","_x3","auth_newPassword","_ref4","_callee4","_context4","_x4","auth_confirmToken","_ref5","_callee5","_context5","_x5","auth_confirmEmail","email","_ref6","_callee6","_context6","_x6","auth_clearAuthErrors","_defineProperty","Storage","prototype","key","JSON","stringify","contact_contact","contact_asyncToGenerator","contact_subscribe","contact_clearContactErrors","contact_objectSpread","contact_defineProperty","trimValues","mapFn","keys","reduce","result","maniObject","trim","LoginForm_LoginForm","password","apiErrors","inputChangeHandler","_e$target","prevState","LoginForm_defineProperty","clearAuthErrors","formSubmitHandler","preventDefault","_this$state","_objectWithoutProperties","history","push","nextProps","nextState","_this$state2","onSubmit","confirm","components_LoginForm","redux","actions_namespaceObject","SignupForm_SignupForm","firstName","lastName","SignupForm_defineProperty","SignupForm_objectWithoutProperties","signup","components_SignupForm","Logout_Logout","logout","pages_Logout","pages_Secret","pages_NotFound","EditProfile_EditProfile","pages_EditProfile","pages_Settings","showEditProfile","editProfileClickHandler","Profile_Profile","pages_Profile","common_requireAuth","ChildComponent","ComposedComponent","_Component","requireAuth_classCallCheck","requireAuth_possibleConstructorReturn","requireAuth_getPrototypeOf","shouldNavigateAway","requireAuth_inherits","PasswordResetForm_PasswordResetForm","PasswordResetForm_defineProperty","PasswordResetForm_objectWithoutProperties","resetPassword","reset","components_PasswordResetForm","NewPasswordForm_NewPasswordForm","verifyToken","params","verifytoken","NewPasswordForm_defineProperty","NewPasswordForm_objectWithoutProperties","newPassword","components_NewPasswordForm","EmailConfirmationForm_EmailConfirmationForm","EmailConfirmationForm_defineProperty","_e$target2","EmailConfirmationForm_objectWithoutProperties","confirmEmail","clearErrors","_extends","components_EmailConfirmationForm","common_Spinner","style","position","left","top","src","spinner_default","alt","EmailConfirmationToken_EmailConfirmationToken","_this2","EmailConfirmationToken_objectWithoutProperties","confirmToken","pages_EmailConfirmationToken","TextAreaField_TextAreaField","rows","common_TextAreaField","ContactForm_ContactForm","subject","ContactForm_defineProperty","clearContactErrors","ContactForm_objectWithoutProperties","contact","components_ContactForm","NewsletterForm_NewsletterForm","NewsletterForm_defineProperty","NewsletterForm_objectWithoutProperties","subscribe","components_NewsletterForm","components_AppRouter","BrowserRouter","Switch","Route","exact","path","component","initialState","length","undefined","action","auth_objectSpread","contact_initialState","reducers_contact","reducers_contact_objectSpread","getObject","parse","getItem","store","src_store","redux_thunk_es","__REDUX_DEVTOOLS_EXTENSION__","routes","react_dom_default","render","getElementById","URL","origin","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.28b8f71d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.1334ddcb.svg\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { Helmet } from 'react-helmet';\n\nclass Landing extends Component {\n\n  render () {\n    return (\n      <div className=\"landing\">\n       <Helmet>\n        <title> Dev Server | Landing Page</title>\n        <meta name=\"description\" content=\"Our Landing Page\" />\n       </Helmet>\n       <p> I'm the landing page, please do not leave me like this  </p> \n      </div>\n    );\n  }\n  \n}\n\nexport default Landing;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n\n  state = {\n    showSettings: false\n  }\n\n  settingsClickHandler = () => {\n    if (!this.state.showSettings) {\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    }\n    this.setState({ showSettings: !this.state.showSettings});\n  }\n\n  handleOutsideClick = (e) => {\n    if (this.node.contains(e.target)) {\n      return;\n    }\n    this.settingsClickHandler();\n  }\n\n  navHandler = () => {\n    if ( this.props.authenticated && this.props.user) {\n      const { username, fullName } = this.props.user;\n      const { showSettings } = this.state;\n      return (\n        <div className=\"header\">\n          <div className=\"header__content container\">\n            <div className=\"header__logo\">\n             <Link to=\"/\"> App Logo </Link>\n            </div>\n            <div className=\"header__nav\">\n              <div className=\"two\">\n               <Link to={`/${username}`}>\n                  <span> { this.props.user ? `Hello, \\u00A0 ${fullName}` : null }</span>\n               </Link> \n              </div>\n              <div \n                ref={node => { this.node = node; }}\n                >\n                <button \n                  className=\"button--icon\"\n                  onClick={this.settingsClickHandler}\n                > <i className=\"fas fa-caret-down\"></i> </button>\n                \n              </div> \n            </div>\n          </div>\n          {\n            showSettings ? \n            <div className=\"header__list\">\n            <Link to=\"/settings\" onClick={this.settingsClickHandler} > Settings </Link>\n            <Link to=\"/logout\" onClick={this.settingsClickHandler} > Logout </Link>\n            </div>\n            : null\n          }\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"header\">\n          <div className=\"container header__content\">\n            <div className=\"header__logo\">\n              <Link to=\"/\"> App Logo </Link>\n            </div>\n            <div className=\"header__nav\">\n            <Link to=\"/login\"> Login </Link>\n            <Link to=\"/signup\"> Signup </Link>\n          </div>\n        </div>\n      </div>\n       \n      );\n    }\n  }\n\n  render() {    \n    return (\n      <>\n      {this.navHandler()}\n      </>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return {\n    authenticated: state.auth.authenticated,\n    user: state.auth.user\n  };\n}\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Footer extends Component {\n\n  render() {\n    \n    return (\n      <div className=\"footer\">\n        <div className=\" container footer__content\">\n          <div>\n          <p> &copy; Dev Server 2018 </p>\n          </div>\n          <div>\n          <Link to=\"/contact\"> Contacts Us </Link>\n          <Link to=\"/subscribe\"> Our Newsletter </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Footer;","import React from 'react';\n\nconst TextInputField = ({\n  name,\n  type,\n  value,\n  placeholder,\n  label,\n  onChange,\n  onBlur,\n  disabled,\n  autoFocus,\n  autoComplete,\n  className,\n  id,\n  minLength,\n  maxLength,\n  required\n}) => {\n  return (\n    <fieldset>\n      {/* <label htmlFor={name}>\n        {label}\n      </label> */}\n      <input\n        name={name}\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        onChange={onChange}\n        disabled={disabled}\n        onBlur={onBlur}\n        autoFocus={autoFocus}\n        autoComplete={autoComplete}\n        className={className}\n        id={id}\n        minLength={minLength}\n        maxLength={maxLength}\n        required={required}\n      />\n    </fieldset>\n  );\n};\n\nTextInputField.defaultProps = {\n  type: 'text',\n  className: 'text-input',\n  minLength: 2,\n  maxLength: 63,\n  required: true\n};\n\nexport default TextInputField;","import React from 'react';\n\nconst ButtonField = ({\n  type,\n  disabled,\n  autoFocus,\n  autoComplete,\n  className,\n  id,\n  content\n}) => {\n  return (\n    <fieldset>\n      <button\n        type={type}\n        disabled={disabled}\n        autoFocus={autoFocus}\n        autoComplete={autoComplete}\n        className={className}\n        id={id}\n      >\n        {content}\n      </button>\n    </fieldset>\n  );\n};\n\nButtonField.defaultProps = {\n  type: 'submit',\n  className: 'button'\n};\n\nexport default ButtonField;","import axios from 'axios';\n\nimport { AUTH_USER, AUTH_ERROR } from './types';\n\nconst API_URL = 'http://localhost:8080';\n\n// Signup Action \nexport const signup = (user, callback) => async (dispatch) => {\n  try {\n    const response = await axios.post(\n      `${API_URL}/signup`,\n      user\n    );\n    dispatch({ type: AUTH_USER, token: '', user: response.data.user});\n    localStorage.setObject('user', response.data.user);\n    callback();\n  } catch (e) {\n    dispatch({ type: AUTH_ERROR, errors: e.response.data });\n    localStorage.setObject('errors', e.response.data);  \n  }\n};\n\n// Login Action \nexport const login = (user, callback) => async (dispatch) => {\n  try {\n    const response = await axios.post(\n      `${API_URL}/login`,\n      user\n    );\n    dispatch({ type: AUTH_USER, token: response.data.token, user: response.data.user});\n    localStorage.setItem('token', response.data.token);\n    localStorage.setObject('user', response.data.user);\n    callback();\n  } catch (e) {\n    dispatch({ type: AUTH_ERROR, errors: e.response.data });\n    localStorage.setObject('errors', e.response.data);  \n  }\n};\n\n// Logout Action \nexport const logout = () => (dispatch)=> {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n  dispatch({ type: AUTH_USER, token: '', user: '' });\n};\n\n// Reset Password Action \nexport const resetPassword = (login, callback) => async (dispatch) => {\n  try {\n    const response = await axios.post(\n      `${API_URL}/reset`,\n      login\n    )\n    dispatch({ type: AUTH_USER, success: response.data});\n    localStorage.setObject('success', response.data);\n    callback();\n  } catch (e) {\n    dispatch({ type: AUTH_ERROR, errors: e.response.data });\n    localStorage.setObject('errors', e.response.data);  \n  }\n};\n\n// Create New Password Action \nexport const newPassword = (user, callback) => async (dispatch) => {\n  try {\n    const response = await axios.post(\n      `${API_URL}/newpassword`,\n      user\n    );\n    dispatch({ type: AUTH_USER, token: response.data.token, user: response.data.user});\n    localStorage.setItem('token', response.data.token);\n    localStorage.setObject('user', response.data.user);\n    callback();\n  } catch (e) {\n    dispatch({ type: AUTH_ERROR, errors: e.response.data });\n    localStorage.setObject('errors', e.response.data);  \n  }\n};\n\n// Email Confirmation Token Action  -- Handle Received Token\nexport const confirmToken = (user, callback) => async (dispatch) => {\n  try {\n    const response = await axios.post(\n      `${API_URL}/confirm/token`,\n      user\n    );\n    dispatch({ type: AUTH_USER, token: response.data.token, user: response.data.user});\n    localStorage.setItem('token', response.data.token);\n    localStorage.setObject('user', response.data.user);\n    callback();\n  } catch (e) {\n    dispatch({ type: AUTH_ERROR, errors: e.response.data });\n    localStorage.setObject('errors', e.response.data);  \n  }\n};\n\n// Email Confirmation Form Action  -- Handle Send Token \nexport const confirmEmail = (email, callback) => async (dispatch) => {\n  try {\n    const response = await axios.post(\n      `${API_URL}/confirm/email`,\n      email\n    );\n    dispatch({ type: AUTH_USER, success: response.data});\n    localStorage.setObject('success', response.data);\n    callback();\n  } catch (e) {\n    dispatch({ type: AUTH_ERROR, errors: e.response.data });\n    localStorage.setObject('errors', e.response.data);  \n  }\n};\n\n// Clear Server Errors Action \nexport const clearAuthErrors = (name, errors) => {\n  localStorage.removeItem('errors');\n  return {\n    type: AUTH_ERROR,\n    errors: {...errors, [name]: ''}\n  };\n};\n \n// Helpers \nStorage.prototype.setObject = function(key, value) {\n  this.setItem(key, JSON.stringify(value));\n}","export const AUTH_USER = 'AUTH_USER';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const CONTACT_SUCCESS = 'CONTACT_SUCCESS';\nexport const CONTACT_FAIL = 'CONTACT_FAIL';\n","import axios from 'axios';\n\nimport { CONTACT_SUCCESS, CONTACT_FAIL } from './types';\n\nconst API_URL = 'http://localhost:8080';\n\n// Contact Form Action\nexport const contact = (user, callback) => async (dispatch) => {\n  try {\n    const response = await axios.post(\n      `${API_URL}/contact`,\n      user\n    )\n    dispatch({ type: CONTACT_SUCCESS, success: response.data});\n    localStorage.setObject('success', response.data);\n    callback();\n  } catch (e) {\n    dispatch({ type: CONTACT_FAIL, errors: e.response.data });\n    localStorage.setObject('errors', e.response.data);  \n  }\n};\n\n// Newsletter Form Action\nexport const subscribe = (email, callback) => async (dispatch) => {\n  try {\n    const response = await axios.post(\n      `${API_URL}/subscribe`,\n      email\n    )\n    dispatch({ type: CONTACT_SUCCESS, success: response.data});\n    localStorage.setObject('success', response.data);\n    callback();\n  } catch (e) {\n    dispatch({ type: CONTACT_FAIL, errors: e.response.data });\n    localStorage.setObject('errors', e.response.data);  \n  }\n};\n\n// Clear Server Errors Action \nexport const clearContactErrors = (name, errors) => {\n  localStorage.removeItem('errors');\n  return {\n    type: CONTACT_FAIL,\n    errors: {...errors, [name]: ''}\n  };\n};\n\n// Helpers \nStorage.prototype.setObject = function(key, value) {\n  this.setItem(key, JSON.stringify(value));\n}","const maniObject = (user, mapFn) => {\n\treturn Object.keys(user).reduce((result, key) => {\n\t\tresult[key] = mapFn(user[key]);\n\t\treturn result;\n\t}, {});\n}\n\nexport const trimValues = (user) => {\n\treturn maniObject(user, (value) => {\n\t\treturn value.trim();\n\t});\n}","import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport TextInputField from '../common/TextInputField';\nimport ButtonField from '../common/ButtonField';\nimport * as actions from '../../store/actions';\nimport { trimValues } from '../../utils';\n\nclass LoginForm extends Component {\n\n  state = {\n    login: '',\n    password: '',\n    apiErrors: ''\n  }\n\n  static getDerivedStateFromProps(nextProps, nextState) {\n    if (nextProps.apiErrors !== nextState.apiErrors) {\n      return { apiErrors: nextProps.apiErrors };\n    }\n    return null;\n  }\n\n  inputChangeHandler = (e) => {\n    const { name, value } = e.target;\n    this.setState((prevState, props) => {\n      return { [name]: value} \n    });\n    this.props.clearAuthErrors();\n  }\n\n  formSubmitHandler = (e)=> {\n    e.preventDefault();\n    const {apiErrors, ...user } = this.state;\n    this.props.login(trimValues(user), () => {\n      if(this.props.user) {\n        this.props.history.push(`/${this.props.user.username}`);\n      } else {\n        this.props.history.push('/');\n      }\n    });\n  };\n\n  render() {\n    const { login, password, apiErrors } = this.state;\n    return (\n      <form \n       onSubmit={this.formSubmitHandler}\n       className=\"form container\"\n      > \n        <TextInputField\n          placeholder=\"Email or Username\"\n          name=\"login\"\n          value={login}\n          onChange={this.inputChangeHandler}\n          autoFocus=\"true\"\n        />\n        <TextInputField\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          value={password}\n          onChange={this.inputChangeHandler}\n          autoComplete=\"off\"\n        />\n          { apiErrors.login && !apiErrors.confirm ? <div className=\"input__error\"> {apiErrors.login} </div> : null}\n          { apiErrors.confirm ?\n            <div>\n              <div className=\"input__error\"> {apiErrors.confirm} </div>\n              <div className=\"button--link\"> <Link to=\"/confirm\"> Need confirmation email? </Link> </div>\n            </div> \n            : null\n          }\n        <ButtonField  content={ <> Login </> } />\n        <div>\n         <div className=\"button--link\"> <Link to=\"/reset\"> Forget Your Password? </Link> </div>\n        </div>\n      </form>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return { \n    apiErrors: state.auth.errors,\n    user: state.auth.user\n  };\n}\n\nexport default compose(\n  connect(mapStateToProps, actions)\n)(LoginForm);\n","import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nimport TextInputField from '../common/TextInputField';\nimport ButtonField from '../common/ButtonField';\nimport * as actions from '../../store/actions';\nimport { trimValues } from '../../utils';\n\nclass SignupForm extends Component {\n\n  state = {\n    email: '',\n    password: '',\n    username: '',\n    firstName: '',\n    lastName: '',\n    apiErrors: ''\n  }\n\n  static getDerivedStateFromProps(nextProps, nextState) {\n    if (nextProps.apiErrors !== nextState.apiErrors) {\n      return { apiErrors: nextProps.apiErrors };\n    }\n    return null;\n  }\n\n  inputChangeHandler = (e) => {\n    const { name, value } = e.target;\n    this.setState((prevState, props) => {\n      return { [name]: value } \n    });\n    this.props.clearAuthErrors(e.target.name, this.props.apiErrors);\n  }\n\n  formSubmitHandler = (e)=> {\n    e.preventDefault();\n    const { apiErrors, ...user } = this.state; \n    this.props.signup(trimValues(user), () => {\n      this.props.history.push(`/confirm`);\n    });\n  };\n\n  render() {\n    const { email, password, username, firstName, lastName, apiErrors } = this.state;\n    return (\n      <form \n       onSubmit={this.formSubmitHandler}\n       className=\"form container\"\n      >\n        <TextInputField\n          placeholder=\"First Name\"\n          name=\"firstName\"\n          value={firstName}\n          onChange={this.inputChangeHandler}\n          autoFocus=\"true\"\n        />\n        <TextInputField\n          placeholder=\"Last Name\"\n          name=\"lastName\"\n          value={lastName}\n          onChange={this.inputChangeHandler}\n        />\n        <TextInputField\n          placeholder=\"Username\"\n          name=\"username\"\n          value={username}\n          onChange={this.inputChangeHandler}\n        />\n        { apiErrors.username && <div className=\"input__error\">{apiErrors.username}</div> }\n        <TextInputField\n          type=\"email\"\n          placeholder=\"Email Address\"\n          name=\"email\"\n          value={email}\n          onChange={this.inputChangeHandler}\n        />\n        { apiErrors.email && <div className=\"input__error\">{apiErrors.email}</div> }\n        <TextInputField\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          value={password}\n          onChange={this.inputChangeHandler}\n        />\n        { apiErrors.signup && <div className=\"input__error\">{apiErrors.signup}</div> }\n        <ButtonField  content={ \n          <>\n          Create an account \n          </> \n          }\n        />\n      </form>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return { \n    apiErrors: state.auth.errors,\n    user: state.auth.user\n  };\n}\n\nexport default compose(\n  connect(mapStateToProps, actions)\n)(SignupForm);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../store/actions';\n\nclass Logout extends Component {\n\n  componentDidMount() {\n    this.props.logout();\n    this.props.history.push('/');\n  }\n\n  render() {\n    return <div>See you later</div>;\n  }\n\n}\n\nexport default connect(null, actions)(Logout);\n","import React, { Component } from 'react';\nimport { Helmet } from 'react-helmet';\n\nclass Secret extends Component {\n\n  render() {\n    return (\n      <div>\n       <Helmet>\n        <title> Dev Server | Our Secret Page</title>\n       </Helmet>\n        <h1> It's Our Secret Page </h1> \n      </div>\n    );\n  }\n  \n}\n\nexport default Secret;","import React, { Component } from 'react';\nimport { Helmet } from 'react-helmet';\n\nclass NotFound extends Component {\n\n  render() {\n    return (\n      <div>\n        <Helmet>\n          <title> Dev Server | Page Not Found</title>\n        </Helmet>\n          ERROR 404, Page Not Found\n      </div>\n    );\n  }\n\n}\n\nexport default NotFound;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass EditProfile extends Component {\n\n  render() {\n    const { firstName, lastName, username, email } = this.props.user;\n    return (\n      <div>\n       <p> {firstName}</p>\n       <p> {lastName}</p>\n       <p>{username}</p>\n       <p>{email}</p>\n      </div>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return {\n    authenticated: state.auth.authenticated,\n    user: state.auth.user\n  };\n}\n\nexport default connect(mapStateToProps)(EditProfile);","import React, { Component } from 'react';\n\nimport EditProfile from './EditProfile';\n\nclass Settings extends Component {\n\n  state = {\n    showEditProfile: false\n  }\n\n  editProfileClickHandler = () => {\n    this.setState({ showEditProfile: !this.state.showEditProfile});\n  }\n  \n  render() {\n    const { showEditProfile } = this.state;\n    return (\n      <div className=\"container settings\"> \n        <button\n          onClick={this.editProfileClickHandler}\n          className=\"button--link\"\n        > \n        Edit Your Profile \n        </button>\n        { showEditProfile ? <EditProfile /> : null}\n      </div>\n    );\n  }\n\n}\n\nexport default Settings;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Profile extends Component {\n\n  render() {\n    const { firstName } = this.props.user;\n    return (\n      <div className=\"profile container\">\n       <h1> { this.props.user ? `Hello, ${firstName}` : null }</h1>\n      </div>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return {\n    authenticated: state.auth.authenticated,\n    user: state.auth.user\n  };\n}\n\nexport default connect(mapStateToProps)(Profile);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nconst requireAuth =  (ChildComponent) => {\n  class ComposedComponent extends Component {\n    componentDidMount() {\n      this.shouldNavigateAway();\n    }\n\n    componentDidUpdate() {\n      this.shouldNavigateAway();\n    }\n    \n    shouldNavigateAway() {\n      if (!this.props.auth) {\n        this.props.history.push('/');\n      }\n    }\n\n    render() {\n      return <ChildComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state) {\n    return { auth: state.auth.authenticated };\n  }\n\n  return connect(mapStateToProps)(ComposedComponent);\n};\n\nexport default requireAuth;","import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nimport TextInputField from '../common/TextInputField';\nimport ButtonField from '../common/ButtonField';\nimport * as actions from '../../store/actions';\nimport { trimValues } from '../../utils';\n\nclass PasswordResetForm extends Component {\n\n  state = {\n    login: '',\n    apiErrors: '',\n    success: ''\n  }\n\n  static getDerivedStateFromProps(nextProps, nextState) {\n    if (nextProps.apiErrors !== nextState.apiErrors) {\n      return { apiErrors: nextProps.apiErrors };\n    }\n    if (nextProps.success !== nextState.success) {\n      return { success: nextProps.success };\n    }\n    return null;\n  }\n\n  inputChangeHandler = (e) => {\n    const { name, value } = e.target;\n    this.setState((prevState, props) => {\n      return { [name]: value} \n    });\n  }\n\n  formSubmitHandler = (e)=> {\n    e.preventDefault();\n    const { apiErrors, success, ...login } = this.state;\n    this.props.resetPassword(trimValues(login));\n  };\n\n  render() {\n    const { login, apiErrors, success } = this.state;\n    \n    return (\n      <form \n       onSubmit={this.formSubmitHandler}\n       className=\"form container\"\n      >\n        { success && !apiErrors.reset ? <div> \n          <p>\n          We sent an password reset mail to <strong>{success.confirm}.</strong> \n          Please follow the instructions in the mail to reset your password.\n          </p>\n          <p> If it doesn’t arrive, check your spam folder. </p>\n          </div> \n          : null\n        }\n        <TextInputField\n          placeholder=\"Enter Your Email or Username\"\n          name=\"login\"\n          value={login}\n          onChange={this.inputChangeHandler}\n          autoFocus=\"true\"\n        />\n        { apiErrors.reset && <div className=\"input__error\"> {apiErrors.reset}</div> }\n        <ButtonField  content={ <> Reset password  </> } />\n      </form>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return { \n    apiErrors: state.auth.errors,\n    success: state.auth.success\n  };\n}\n\nexport default compose(\n  connect(mapStateToProps, actions)\n)(PasswordResetForm);\n","import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nimport TextInputField from '../common/TextInputField';\nimport ButtonField from '../common/ButtonField';\nimport * as actions from '../../store/actions';\nimport { trimValues } from '../../utils';\n\nclass NewPasswordForm extends Component {\n\n  state = {\n    password: '',\n    verifyToken: this.props.match.params.verifytoken,\n    apiErrors: '',\n    type: 'text'\n  }\n\n  static getDerivedStateFromProps(nextProps, nextState) {\n    if (nextProps.apiErrors !== nextState.apiErrors) {\n      return { apiErrors: nextProps.apiErrors };\n    } \n    return null;\n  }\n\n  inputChangeHandler = (e) => {\n    const { name, value } = e.target;\n    this.setState((prevState, props) => {\n      return { [name]: value, type: 'password'} \n    });  \n  }\n\n  formSubmitHandler = (e)=> {\n    e.preventDefault();\n    const { apiErrors, type, ...user } = this.state;\n    this.props.newPassword(trimValues(user), () => {\n      if(this.props.user) {\n        this.props.history.push(`/${this.props.user.username}`);\n      }\n    });\n  };\n\n  render() {\n    const { password, apiErrors, type } = this.state;\n    return (\n      <form \n       onSubmit={this.formSubmitHandler}\n       className=\"form container\"\n      >\n        <TextInputField\n          type={type}\n          placeholder=\"Enter Your New Password\"\n          name=\"password\"\n          value={password}\n          onChange={this.inputChangeHandler}\n          autoFocus=\"true\"\n        />\n        { apiErrors.reset && <div className=\"input__error\"> {apiErrors.reset}</div> }\n        <ButtonField  content={ <> Create new password </> } />\n      </form>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return { \n    apiErrors: state.auth.errors,\n    user: state.auth.user\n  };\n}\n\nexport default compose(\n  connect(mapStateToProps, actions)\n)(NewPasswordForm);\n","import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nimport TextInputField from '../common/TextInputField';\nimport ButtonField from '../common/ButtonField';\nimport * as actions from '../../store/actions';\n\nclass EmailConfirmationForm extends Component {\n\n  state = {\n    email: this.props.user ? this.props.user.email : '',\n    apiErrors: '',\n    success: ''\n  }\n\n  static getDerivedStateFromProps(nextProps, nextState) {\n    if (nextProps.apiErrors !== nextState.apiErrors) {\n      return { apiErrors: nextProps.apiErrors };\n    }\n    if (nextProps.success !== nextState.success) {\n      return { success: nextProps.success };\n    }\n    return null;\n  }\n\n  componentDidMount() {\n    this.props.clearErrors();\n    const { ...email } = this.state;\n    this.props.confirmEmail(email)\n  }\n\n  inputChangeHandler = (e) => {\n    const { name, value } = e.target;\n    this.setState((prevState, props) => {\n      return { [name]: value} \n    });\n    this.props.clearAuthErrors();\n  }\n\n  formSubmitHandler = (e)=> {\n    e.preventDefault();\n    const { name, value } = e.target;\n    this.setState((prevState, props) => {\n      return { [name]: value} \n     }\n    );\n    const { apiErrors, ...email } = this.state;\n    this.props.confirmEmail(email);\n  };\n\n  render() {\n    const { email, apiErrors, success } = this.state;\n    \n    return (\n      <form \n        onSubmit={this.formSubmitHandler}\n        className=\"form container\"\n      >\n        { success && !apiErrors.confirm ? <div> \n          <p>\n          You’re almost done! We sent an activation mail \n          to <strong>{success.confirm}.</strong> Please follow the instructions in the mail to activate your account.\n          </p>\n          <p> If it doesn’t arrive, check your spam folder. </p>\n          </div> \n          : null\n        }\n        <TextInputField\n        type=\"email\"\n        placeholder=\"Enter Your Email\"\n        name=\"email\"\n        value={email}\n        onChange={this.inputChangeHandler}\n        autoFocus=\"true\"\n        />\n         { apiErrors.confirm && <div className=\"input__error\"> {apiErrors.confirm}</div> }\n         <ButtonField  content={ <> Send Another Confirmation Email  </> } />\n      </form>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return { \n    apiErrors: state.auth.errors,\n    user: state.auth.user,\n    success: state.auth.success\n  };\n}\n\nexport default compose(\n  connect(mapStateToProps, actions)\n)(EmailConfirmationForm);\n\n","import React from 'react';\nimport spinner from '../../assets/spinner.svg';\n\nconst Spinner = () => {\n  return (\n    <div\n      style={{ position: 'fixed', left: '40%', top: '30%'}}\n    >\n      <img \n        src={spinner} \n        alt=\"Loading...\" \n      />\n    </div>\n  );\n};\n\nexport default Spinner;","import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../store/actions';\nimport { trimValues } from '../../utils';\nimport Spinner from '../common/Spinner';\nimport EmailConfirmationForm from '../components/EmailConfirmationForm';\n\nclass EmailConfirmationToken extends Component {\n\n  state = {\n    verifyToken: this.props.match.params.verifytoken,\n    apiErrors: ''\n  }\n\n  static getDerivedStateFromProps(nextProps, nextState) {\n    if (nextProps.apiErrors !== nextState.apiErrors) {\n      return { apiErrors: nextProps.apiErrors };\n    }\n    return null;\n  }\n\ncomponentDidMount() {\n  const { apiErrors, ...user } = this.state;\n    this.props.confirmToken(trimValues(user), () => {\n      if(this.props.user) {\n        this.props.history.push(`/${this.props.user.username}`);\n      }\n    });\n}\n  render() {\n    const { apiErrors } = this.state;\n    return (\n      <div>\n         { apiErrors ? \n         <div className=\"input__error\"> \n         {apiErrors.confirm}\n         <EmailConfirmationForm />\n         </div> \n         : <Spinner /> }\n      </div>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return { \n    apiErrors: state.auth.errors,\n    user: state.auth.user\n  };\n}\n\nexport default compose(\n  connect(mapStateToProps, actions)\n)(EmailConfirmationToken);\n","import React from 'react';\n\nconst TextAreaField = ({\n  name,\n  value,\n  placeholder,\n  label,\n  onChange,\n  onBlur,\n  disabled,\n  autoFocus,\n  autoComplete,\n  rows,\n  className,\n  id,\n  minLength,\n  maxLength,\n  required\n}) => {\n  return (\n    <fieldset>\n      {/* <label htmlFor={name}>\n        {label}\n      </label> */}\n      <textarea\n        name={name}\n        value={value}\n        placeholder={placeholder}\n        onChange={onChange}\n        disabled={disabled}\n        onBlur={onBlur}\n        autoFocus={autoFocus}\n        autoComplete={autoComplete}\n        className={className}\n        id={id}\n        rows={rows}\n        minLength={minLength}\n        maxLength={maxLength}\n        required={required}\n      >\n      </textarea>\n    </fieldset>\n  );\n};\n\nTextAreaField.defaultProps = {\n  className: 'text-area',\n  rows: 5,\n  required: false\n};\n\nexport default TextAreaField;","import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nimport TextInputField from '../common/TextInputField';\nimport TextAreaField from '../common/TextAreaField';\nimport ButtonField from '../common/ButtonField';\nimport * as actions from '../../store/actions';\nimport { trimValues } from '../../utils';\n\nclass ContactForm extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    subject: '',\n    content: '',\n    apiErrors: '',\n    success: ''\n  }\n\n  static getDerivedStateFromProps(nextProps, nextState) {\n    if (nextProps.apiErrors !== nextState.apiErrors) {\n      return { apiErrors: nextProps.apiErrors };\n    }\n    if (nextProps.success !== nextState.success) {\n      return { success: nextProps.success };\n    }\n    return null;\n  }\n\n  inputChangeHandler = (e) => {\n    const { name, value } = e.target;\n    this.setState((prevState, props) => {\n      return { [name]: value} \n    });\n    this.props.clearContactErrors();\n  }\n\n  formSubmitHandler = (e) => {\n    e.preventDefault();\n    const {apiErrors, success, ...user } = this.state;\n    this.props.contact(trimValues(user), () => {\n      console.log('Done');\n      // You Might Add A redirect Here \n    });\n  };\n\n  render() {\n    const { name, email, subject, content, success, apiErrors } = this.state;\n    return (\n      <form \n        onSubmit={this.formSubmitHandler}\n        className=\"form container\"\n      >\n        { success ? <div> \n          <p> We received your message and will get back soon to <strong>{success.contact}.</strong></p>\n          </div> \n          : null\n        }\n        <TextInputField\n          placeholder=\"Your Name\"\n          name=\"name\"\n          value={name}\n          onChange={this.inputChangeHandler}\n          autoFocus=\"true\"\n        />\n        <TextInputField\n          type=\"email\"\n          placeholder=\"Your Email\"\n          name=\"email\"\n          value={email}\n          onChange={this.inputChangeHandler}\n        />\n         <TextInputField\n          placeholder=\"Add Subject\"\n          name=\"subject\"\n          value={subject}\n          onChange={this.inputChangeHandler}\n          autoComplete=\"off\"\n        />\n        <TextAreaField\n          placeholder=\"Just say what you need\"\n          name=\"content\"\n          value={content}\n          onChange={this.inputChangeHandler}\n        />\n         { apiErrors.contact && <div className=\"input__error\"> {apiErrors.contact}</div> }\n         <ButtonField  content={ <> Submit </> } />\n        \n      </form>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return { \n    apiErrors: state.contact.errors,\n    success: state.contact.success\n  };\n}\n\nexport default compose(\n  connect(mapStateToProps, actions)\n)(ContactForm);","import React, { Component } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nimport TextInputField from '../common/TextInputField';\nimport ButtonField from '../common/ButtonField';\nimport * as actions from '../../store/actions';\nimport { trimValues } from '../../utils';\n\nclass NewsletterForm extends Component {\n\n  state = {\n    email: '',\n    apiErrors: '',\n    success: ''\n  }\n\n  static getDerivedStateFromProps(nextProps, nextState) {\n    if (nextProps.apiErrors !== nextState.apiErrors) {\n      return { apiErrors: nextProps.apiErrors };\n    }\n    if (nextProps.success !== nextState.success) {\n      return { success: nextProps.success };\n    }\n    return null;\n  }\n\n  inputChangeHandler = (e) => {\n    const { name, value } = e.target;\n    this.setState((prevState, props) => {\n      return { [name]: value } \n    });\n    this.props.clearContactErrors();\n  }\n\n  formSubmitHandler = (e) => {\n    e.preventDefault();\n    const { apiErrors, success, ...email } = this.state;\n    this.props.subscribe(trimValues(email), () => {\n      console.log('Done');\n      // You Might Add A redirect Here \n    });\n  };\n\n  render() {\n    const { email, success, apiErrors } = this.state;\n    return (\n      <form \n       onSubmit={this.formSubmitHandler}\n       className=\"form container\"\n      >\n        { success ? <div> \n          <p><strong>{success.subscribe} is now subscribed to our newsletter.</strong></p>\n          </div> \n          : null\n        }\n        <TextInputField\n          type=\"email\"\n          placeholder=\"Your Email\"\n          name=\"email\"\n          value={email}\n          onChange={this.inputChangeHandler}\n          autoFocus=\"true\"\n        />\n         { apiErrors.subscribe && <div className=\"input__error\"> {apiErrors.subscribe}</div> }\n         <ButtonField  content={ <> Subscribe </> } />\n      </form>\n    );\n  }\n  \n}\n\nfunction mapStateToProps(state) {\n  return { \n    apiErrors: state.contact.errors,\n    success: state.contact.success\n  };\n}\n\nexport default compose(\n  connect(mapStateToProps, actions)\n)(NewsletterForm);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Landing from './pages/Landing';\nimport Header from './layout/Header';\nimport Footer from './layout/Footer';\nimport LoginForm from './components/LoginForm';\nimport SignupForm from './components/SignupForm';\nimport Logout from './pages/Logout';\nimport Secret from './pages/Secret';\nimport NotFound from './pages/NotFound';\nimport Settings from './pages/Settings';\nimport Profile from './pages/Profile';\nimport requireAuth from './common/requireAuth';\nimport PasswordResetForm from './components/PasswordResetForm';\nimport NewPasswordForm from './components/NewPasswordForm';\nimport EmailConfirmationForm from './components/EmailConfirmationForm';\nimport EmailConfirmationToken from './pages/EmailConfirmationToken';\nimport ContactForm from './components/ContactForm';\nimport NewsletterForm from './components/NewsletterForm';\nimport Spinner from './common/Spinner';\n\nclass AppRouter extends Component {\n  render () {\n    return (\n      <Router>\n        <React.Fragment>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Landing}/>\n            <Route path=\"/login\" component={LoginForm}/>\n            <Route path=\"/logout\" component={Logout}/>\n            <Route path=\"/signup\" component={SignupForm}/>\n            <Route path=\"/reset\" component={PasswordResetForm}/>\n            <Route path=\"/contact\" component={ContactForm}/>\n            <Route path=\"/subscribe\" component={NewsletterForm}/>\n            <Route path=\"/spinner\" component={Spinner}/>\n            <Route path=\"/reset/sent\" component={Spinner}/>\n            <Route path=\"/newpassword/:verifytoken\" component={NewPasswordForm}/>\n            <Route path=\"/confirm/:verifytoken\" component={EmailConfirmationToken}/>\n            <Route path=\"/confirm/\" component={EmailConfirmationForm}/>\n            <Route path=\"/secret\" component={requireAuth(Secret)}/>\n            <Route path=\"/settings\" component={requireAuth(Settings)}/>\n            <Route path=\"/:username\" component={requireAuth(Profile)}/>\n            <Route  component={NotFound}/>\n          </Switch>\n          <Footer />\n        </React.Fragment>\n      </Router>\n    );\n  }\n}\n\nexport default AppRouter;","import { AUTH_USER, AUTH_ERROR } from '../actions/types';\n\nconst initialState = {\n  authenticated: '',\n  errors: '',\n  user: '',\n  success: ''\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case AUTH_USER:\n      return { ...state, authenticated: action.token, user: action.user, success: action.success};\n    case AUTH_ERROR:\n      return { ...state, errors: action.errors, user: action.user };\n    default:\n      return state;\n  }\n}\n","import { CONTACT_SUCCESS, CONTACT_FAIL } from '../actions/types';\n\nconst initialState = {\n  errors: '',\n  success: ''\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case CONTACT_SUCCESS:\n      return { ...state, success: action.success };\n    case CONTACT_FAIL:\n      return { ...state, errors: action.errors };\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport authReducer from './reducers/auth';\nimport contactReducer from './reducers/contact';\nimport { AUTH_USER } from './actions/types';\n\nexport default () => {\n\n  const store = createStore(\n    combineReducers({\n      auth: authReducer,\n      contact: contactReducer\n    }),\n    compose(\n      applyMiddleware(thunk),\n      window.__REDUX_DEVTOOLS_EXTENSION__ && \n      window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n\n  const token = localStorage.getItem('token');\n  const user =  localStorage.getItem('user')  ? localStorage.getObject('user') : null;\n\n  if (token) {\n    store.dispatch({\n      type: AUTH_USER,\n      token,\n      user\n    });\n  } \n  \n  return store;\n\n};\n\n// Helper\nStorage.prototype.getObject = function(key) {\n  return JSON.parse(this.getItem(key));\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from 'react-redux';\n\nimport registerServiceWorker from './registerServiceWorker';\nimport './styles/main.scss';\nimport AppRouter from './components/AppRouter';\nimport configureStore from './store/configureStore'; \n\nconst store = configureStore();\n\nconst routes = (\n  <Provider store={store}>\n    <AppRouter/>\n  </Provider>\n);\n\nReactDOM.render(routes, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}